
upstream homer {
  server homer:8080;
}
upstream prowlarr {
  server prowlarr:9696;
}
upstream sonarr {
  server sonarr:8989;
}
upstream radarr {
  server radarr:7878;
}
upstream jellyfin {
  server jellyfin:8096;
}
upstream kuma {
server kuma:3001;
}
upstream qbt {
server qbittorrent:8080;
}

server {
  listen 80;
  client_max_body_size 10M;
  root /usr/share/nginx/html;
  index index.html;
  #  * Homer homepage
  location / {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://homer;
      client_max_body_size 16m;
    }

  
  # * Uptime kuma
  location /kuma {
    # Define upstream address
    set $upstream_app uptime-kuma;
    set $url_prefix kuma;
    proxy_pass http://kuma;

    # Set proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_buffering off;

    # Redirect location headers
    proxy_redirect ^ /$url_prefix;
    proxy_redirect /dashboard /$url_prefix/dashboard;

    # Remove URL prefix to pass to the app
    rewrite ^/kuma/?(.*)$ /$1 break;

    # Sub filters to replace hardcoded paths
    proxy_set_header Accept-Encoding "";
    sub_filter_once off;
    sub_filter_types *;
    sub_filter '/assets/' '/$url_prefix/assets/';
    sub_filter '"assets/' '"$url_prefix/assets/';
    sub_filter '/dashboard' '/$url_prefix/dashboard';
    sub_filter '"/socket.io"' '"/$url_prefix/socket.io"';

    sub_filter '"/icon.svg"' '"/$url_prefix/icon.svg"';
    sub_filter '"/favicon.ico"' '"/$url_prefix/favicon.ico"';
    sub_filter '"/manifest.json"' '"/$url_prefix/manifest.json"';
  }

# * Prowlarr
location ^~ /prowlarr {
    proxy_pass http://prowlarr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
}
# Allow the API External Access via NGINX
location ^~ /prowlarr/api {
    auth_basic off;
    proxy_pass http://prowlarr;
}
# * Sonarr
location ^~ /sonarr {
    proxy_pass http://sonarr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
}
# Allow the API External Access via NGINX
location ^~ /sonarr/api {
    auth_basic off;
    proxy_pass http://sonarr;
}
# * Radarr
location ^~ /radarr {
    proxy_pass http://radarr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
}
# Allow the API External Access via NGINX
location ^~ /radarr/api {
    auth_basic off;
    proxy_pass http://radarr;
}

# * Jellyfin
   location ^~ /jellyfin {
    proxy_pass http://jellyfin;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
}


location /qbt/ {
    proxy_pass         http://qbt/;
    proxy_http_version 1.1;
    proxy_set_header   Host               qbt;
    proxy_set_header   X-Forwarded-Host   $http_host;
    proxy_set_header   X-Forwarded-For    $remote_addr;
    proxy_cookie_path  /                  "/; Secure";
}
}